{"version":3,"file":"component---src-templates-blog-post-js-6956aaaa1fd8049d6854.js","mappings":"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","sources":["webpack://heriswn.github.io/./src/components/bio.js","webpack://heriswn.github.io/./src/utils/helper.js","webpack://heriswn.github.io/./src/components/toc.js","webpack://heriswn.github.io/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        // formats={[\"auto\", \"webp\", \"jpg\"]}\n        src=\"../assets/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","export function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map(x => x.toLowerCase())\n      .join(\"-\")\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { slugify } from \"../utils/helper\"\n\nconst ToC = ({ headings }) => (\n  <ul className=\"ul-toc\">\n    <h4>Table of contents</h4>\n    {headings.map(heading => {\n      if (heading.depth > 4) {\n        return <div />\n      }\n\n      return (\n        <li key={heading.value}>\n          <a href={`#${slugify(heading.value)}`} className=\"link-toc\">\n            {heading.value}\n          </a>\n        </li>\n      )\n    })}\n  </ul>\n)\n\nexport default ToC","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport ToC from \"../components/toc\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { slugify } from \"../utils/helper\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        image={\n          data.site.siteMetadata.siteUrl + post.frontmatter.thumbnail.publicURL\n        }\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <ToC headings={post.headings} />\n          <div className=\"category\">\n            {post.frontmatter.categories.map((cat, index) => (\n              <Link key={index} to={`/category/${slugify(cat)}`}>\n                {cat}\n              </Link>\n            ))}\n          </div>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.description || post.excerpt}</p>\n          <p>{post.frontmatter.date}</p>\n          <div>\n            <GatsbyImage\n              image={post.frontmatter.thumbnail.childImageSharp.gatsbyImageData}\n              className=\"post-image\"\n              alt={post.frontmatter.title}\n            />\n          </div>\n          <small>{post.frontmatter.credit}</small>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <div className=\"tag\">\n          {post.frontmatter.tags.map((tagIndex, index) => (\n            <li key={index}>\n              <Link to={`/tag/${slugify(tagIndex)}`}>#{tagIndex}</Link>\n            </li>\n          ))}\n        </div>\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title}\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        image\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 50)\n      html\n      headings {\n        value\n        depth\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n        tags\n        credit\n        thumbnail {\n          publicURL\n          childImageSharp {\n            gatsbyImageData(\n              width: 700\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","src","width","height","quality","alt","name","summary","href","twitter","slugify","string","match","map","x","toLowerCase","join","headings","heading","depth","key","value","location","post","markdownRemark","siteTitle","title","previous","next","image","siteUrl","frontmatter","thumbnail","publicURL","description","excerpt","itemScope","itemType","categories","cat","index","Link","to","itemProp","date","G","childImageSharp","gatsbyImageData","credit","dangerouslySetInnerHTML","__html","html","tags","tagIndex","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}