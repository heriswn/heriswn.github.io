{"version":3,"file":"component---src-templates-blog-post-js-e92878d3d2a9fb5270ed.js","mappings":"6JA8DA,IA1DY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,uBAEtBX,aAAM,EAANA,EAAQY,OACP,sCACa,IACX,qBACEC,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAEJ,8BAASf,EAAOY,OACb,KACJZ,aAAM,EAANA,EAAQgB,UAAW,KAAI,qCAGxB,qBACEH,KAAI,yBAAyBV,aAAM,EAANA,EAAQc,UAAO,IAC5CH,OAAO,SACPC,IAAI,uBAAqB,YAQrC,C,kIC5DO,SAASG,EAAQC,GACtB,OACEA,GACAA,EACGC,MACC,sEAEDC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,aAAa,IACxBC,KAAK,IAEZ,CCDA,IA0FA,EA1FyB,SAAH,GAA4B,IAAD,EAArB1B,EAAI,EAAJA,KAAM2B,EAAQ,EAARA,SAC1BC,EAAO5B,EAAK6B,eACZC,GAAkC,QAAtB,EAAA9B,EAAKG,KAAKC,oBAAY,aAAtB,EAAwB2B,QAAK,QACvCC,EAAmBhC,EAAnBgC,SAAUC,EAASjC,EAATiC,KAElB,OACE,gBAAC,IAAM,CAACN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAG,CACFI,MACElC,EAAKG,KAAKC,aAAa+B,QAAUP,EAAKQ,YAAYC,UAAUC,UAE9DP,MAAOH,EAAKQ,YAAYL,MACxBQ,YAAaX,EAAKQ,YAAYG,aAAeX,EAAKY,UAEpD,2BACElC,UAAU,YACVmC,WAAS,EACTC,SAAS,6BAET,8BAEE,sBAAIC,SAAS,YAAYf,EAAKQ,YAAYL,OAC1C,yBAAIH,EAAKQ,YAAYG,aAAeX,EAAKY,SACzC,uBAAKlC,UAAU,QACb,4BACGsB,EAAKQ,YAAYlC,OAAM,KAAI0B,EAAKQ,YAAYQ,KAAI,MAEnD,wBAAMtC,UAAU,YACbsB,EAAKQ,YAAYS,WAAWtB,KAAI,SAACuB,EAAKC,GAAK,OAC1C,gBAAC,EAAAC,KAAI,CAACC,IAAKF,EAAOG,GAAE,aAAe9B,EAAQ0B,IACxCA,EACI,MAIb,2BACE,gBAAC,EAAAK,EAAW,CACVjB,MAAON,EAAKQ,YAAYC,UAAUe,gBAAgBC,gBAClD/C,UAAU,aACVO,IAAG,GAAKe,EAAKQ,YAAYL,SAG7B,4BAAOH,EAAKQ,YAAYkB,SAE1B,2BACEC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,MACxCd,SAAS,gBAEX,uBAAKrC,UAAU,OACZsB,EAAKQ,YAAYsB,KAAKnC,KAAI,SAACoC,EAAUZ,GAAK,OACzC,sBAAIE,IAAKF,GACP,gBAAC,EAAAC,KAAI,CAACE,GAAE,QAAU9B,EAAQuC,IAAY,IAAGA,GACtC,KAGT,2BACA,8BACE,gBAAC,IAAG,QAGR,uBAAKrD,UAAU,iBACb,sBACEsD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjC,GACC,gBAAC,EAAAgB,KAAI,CAACE,GAAIlB,EAASkC,OAAOC,KAAMlD,IAAI,QACjCe,EAASI,YAAYL,QAI5B,0BACGE,GACC,gBAAC,EAAAe,KAAI,CAACE,GAAIjB,EAAKiC,OAAOC,KAAMlD,IAAI,QAC7BgB,EAAKG,YAAYL,UAQlC,C","sources":["webpack://heriswn.github.io/./src/components/bio.js","webpack://heriswn.github.io/./src/utils/helper.js","webpack://heriswn.github.io/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        src=\"../assets/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by{\" \"}\n          <a\n            href=\"https://herisetiawan.vercel.app\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <strong>{author.name}</strong>\n          </a>{\" \"}\n          {author?.summary || null}\n          {` `}\n          You should follow them on {` `}\n          <a\n            href={`https://twitter.com/${social?.twitter || ``}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","export function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map(x => x.toLowerCase())\n      .join(\"-\")\n  )\n}\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { slugify } from \"../utils/helper\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        image={\n          data.site.siteMetadata.siteUrl + post.frontmatter.thumbnail.publicURL\n        }\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          {/* <ToC headings={post.headings} /> */}\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.description || post.excerpt}</p>\n          <div className=\"meta\">\n            <span>\n              {post.frontmatter.author}, {post.frontmatter.date} â€¢\n            </span>\n            <span className=\"category\">\n              {post.frontmatter.categories.map((cat, index) => (\n                <Link key={index} to={`/category/${slugify(cat)}`}>\n                  {cat}\n                </Link>\n              ))}\n            </span>\n          </div>\n          <div>\n            <GatsbyImage\n              image={post.frontmatter.thumbnail.childImageSharp.gatsbyImageData}\n              className=\"post-image\"\n              alt={`${post.frontmatter.title}`}\n            />\n          </div>\n          <span>{post.frontmatter.credit}</span>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <div className=\"tag\">\n          {post.frontmatter.tags.map((tagIndex, index) => (\n            <li key={index}>\n              <Link to={`/tag/${slugify(tagIndex)}`}>#{tagIndex}</Link>\n            </li>\n          ))}\n        </div>\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title}\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        image\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 50)\n      html\n      headings {\n        value\n        depth\n      }\n      frontmatter {\n        title\n        author\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n        tags\n        credit\n        thumbnail {\n          publicURL\n          childImageSharp {\n            gatsbyImageData(width: 700, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","src","width","height","quality","alt","name","href","target","rel","summary","twitter","slugify","string","match","map","x","toLowerCase","join","location","post","markdownRemark","siteTitle","title","previous","next","image","siteUrl","frontmatter","thumbnail","publicURL","description","excerpt","itemScope","itemType","itemProp","date","categories","cat","index","Link","key","to","G","childImageSharp","gatsbyImageData","credit","dangerouslySetInnerHTML","__html","html","tags","tagIndex","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug"],"sourceRoot":""}