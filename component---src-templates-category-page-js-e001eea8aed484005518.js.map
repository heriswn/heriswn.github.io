{"version":3,"file":"component---src-templates-category-page-js-e001eea8aed484005518.js","mappings":"4LAGqBA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAuDlB,OAvDkBA,EACnBC,YAAA,WAWE,OAVsBC,KAAKC,MAAnBC,UAELC,KAAI,SAAAC,GACH,MAAO,CACLC,KAAMD,EAASE,OAAOC,KACtBC,MAAOJ,EAASK,YAAYD,MAC5BE,KAAMN,EAASK,YAAYC,KAC3BC,YAAaP,EAASK,YAAYE,aAAeP,EAASQ,aAIjE,EAEDC,OAAA,WACE,IAAMC,EAAWd,KAAKD,cAEtB,OACE,2BACGe,EAASX,KAAI,SAAAY,GACZ,OACE,2BACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,2BACE,0BACE,gBAAC,EAAAC,KAAD,CACEC,GAAIL,EAAKV,KACTgB,IAAKN,EAAKP,MACVc,SAAS,MACTN,UAAU,iBAEV,wBAAMM,SAAS,YAAYP,EAAKP,SAGpC,4BAAOO,EAAKL,QAGhB,2BACE,qBACEa,wBAAyB,CACvBC,OAAQT,EAAKJ,aAEfW,SAAS,uBAQxB,EAvDkBxB,CAAoB2B,EAAAA,Y,sECgBzC,UAb6B,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACxCC,GAAQH,MAAAA,OAAA,EAAAA,EAAMI,kBAAkBC,QAAS,GACzCC,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwB1B,QAAxB,QAElB,OACE,gBAAC,IAAD,CAAQmB,SAAUA,EAAUnB,MAAOwB,GACjC,gBAAC,IAAD,CAAKL,SAAUA,EAAUnB,MAAOoB,MAAAA,OAAF,EAAEA,EAAaO,WAC7C,0BAAKP,MAAAA,OAAL,EAAKA,EAAaO,UAClB,gBAAC,IAAD,CAAajC,UAAW2B","sources":["webpack://heriswn.github.io/./src/components/postList.js","webpack://heriswn.github.io/./src/templates/category-page.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .map(postEdge => {\n        return {\n          path: postEdge.fields.slug,\n          title: postEdge.frontmatter.title,\n          date: postEdge.frontmatter.date,\n          description: postEdge.frontmatter.description || postEdge.excerpt,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n\n    return (\n      <div>\n        {postList.map(post => {\n          return (\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <div>\n                  <h2>\n                    <Link\n                      to={post.path}\n                      key={post.title}\n                      itemProp=\"url\"\n                      className=\"postList-link\"\n                    >\n                      <span itemProp=\"headline\">{post.title}</span>\n                    </Link>\n                  </h2>\n                  <time>{post.date}</time>\n                </div>\n              </header>\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.description,\n                  }}\n                  itemProp=\"description\"\n                />\n              </div>\n            </article>\n          )\n        })}\n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostListing from \"../components/postList\"\n\nconst CategoryPageTemplate = ({ data, location, pageContext }) => {\n  const posts = data?.allMarkdownRemark.nodes || []\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo location={location} title={pageContext?.category} />\n      <h1>{pageContext?.category}</h1>\n      <PostListing postEdges={posts} />\n    </Layout>\n  )\n}\n\nexport default CategoryPageTemplate\n\nexport const pageQuery = graphql`\n  query CategoryPageByType($category: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { categories: { eq: $category } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["PostListing","getPostList","this","props","postEdges","map","postEdge","path","fields","slug","title","frontmatter","date","description","excerpt","render","postList","post","className","itemScope","itemType","Link","to","key","itemProp","dangerouslySetInnerHTML","__html","Component","data","location","pageContext","posts","allMarkdownRemark","nodes","siteTitle","site","siteMetadata","category"],"sourceRoot":""}