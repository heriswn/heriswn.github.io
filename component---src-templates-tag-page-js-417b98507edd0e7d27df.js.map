{"version":3,"file":"component---src-templates-tag-page-js-417b98507edd0e7d27df.js","mappings":"4LAGqBA,EAAW,6FAgE7B,OAhE6B,EAC9BC,YAAA,WAaE,OAZsBC,KAAKC,MAAnBC,UAELC,KAAI,SAAAC,GACH,MAAO,CACLC,SAAUD,EAASE,GACnBC,KAAMH,EAASI,OAAOC,KACtBC,MAAON,EAASO,YAAYD,MAC5BE,KAAMR,EAASS,WACfC,KAAMV,EAASO,YAAYG,KAC3BC,YAAaX,EAASO,YAAYI,aAAeX,EAASY,QAE9D,GAEJ,EAAC,EAEDC,OAAA,WACE,IAAMC,EAAWlB,KAAKD,cAEtB,OACE,2BACGmB,EAASf,KAAI,SAAAgB,GACZ,OACE,2BACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,2BACE,uBAAKF,UAAU,wBACb,0BACE,gBAAC,EAAAG,KAAI,CAACC,GAAIL,EAAKZ,KAAMkB,IAAKN,EAAKd,SAAUqB,SAAS,OAChD,wBAAMA,SAAS,YAAYP,EAAKT,UAItC,2BACE,gBAAC,EAAAa,KAAI,CAACC,GAAIL,EAAKZ,KAAMkB,IAAKN,EAAKd,SAAUqB,SAAS,OAChD,wBAAMA,SAAS,YAAU,4BACGP,EAAKZ,UAMzC,2BACE,qBACEoB,wBAAyB,CACvBC,OAAQT,EAAKJ,aAEfW,SAAS,gBAEX,yBACE,6BAAQP,EAAKL,MAAa,KAAG,IAC7B,6BAAQK,EAAKP,KAAI,eAK3B,IAGN,EAAC,EAhE6B,CAASiB,EAAAA,U,kFCqBzC,UAlBwB,SAAH,GAAyC,IAAD,EAAlCC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SACzBC,EAD8C,EAAXC,YACnCD,IACAE,GAAQJ,aAAI,EAAJA,EAAMK,kBAAkBC,QAAS,GACzCC,GAAkC,QAAtB,EAAAP,EAAKQ,KAAKC,oBAAY,aAAtB,EAAwB7B,QAAK,QAE/C,OACE,gBAAC,IAAM,CAACqB,SAAUA,EAAUrB,MAAO2B,GACjC,gBAAC,IAAG,CAACN,SAAUA,EAAUrB,MAAOsB,IAChC,uBAAKZ,UAAU,eACb,0BACE,gBAAC,EAAAG,KAAI,CAACC,GAAG,KAAG,IAAGQ,KAGnB,gBAAC,IAAW,CAAC9B,UAAWgC,IAG9B,C","sources":["webpack://heriswn.github.io/./src/components/postList.js","webpack://heriswn.github.io/./src/templates/tag-page.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .map(postEdge => {\n        return {\n          idUnique: postEdge.id,\n          path: postEdge.fields.slug,\n          title: postEdge.frontmatter.title,\n          read: postEdge.timeToRead,\n          date: postEdge.frontmatter.date,\n          description: postEdge.frontmatter.description || postEdge.excerpt,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n\n    return (\n      <div>\n        {postList.map(post => {\n          return (\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <div>\n                  <div className=\"custom-link-postlist\">\n                    <h2>\n                      <Link to={post.path} key={post.idUnique} itemProp=\"url\">\n                        <span itemProp=\"headline\">{post.title}</span>\n                      </Link>\n                    </h2>\n                  </div>\n                  <div>\n                    <Link to={post.path} key={post.idUnique} itemProp=\"url\">\n                      <span itemProp=\"headline\">\n                        https://heriswn.github.io{post.path}\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n              </header>\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.description,\n                  }}\n                  itemProp=\"description\"\n                />\n                <p>\n                  <small>{post.date}</small> â€¢{\" \"}\n                  <small>{post.read} min read</small>\n                </p>\n              </div>\n            </article>\n          )\n        })}\n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostListing from \"../components/postList\"\n\nconst TagPageTemplate = ({ data, location, pageContext }) => {\n  let { tag } = pageContext\n  const posts = data?.allMarkdownRemark.nodes || []\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo location={location} title={tag} />\n      <div className=\"custom-link\">\n        <h1>\n          <Link to=\"#\">#{tag}</Link>\n        </h1>\n      </div>\n      <PostListing postEdges={posts} />\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query TagPageByType($tag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { eq: $tag } } }) {\n      nodes {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["PostListing","getPostList","this","props","postEdges","map","postEdge","idUnique","id","path","fields","slug","title","frontmatter","read","timeToRead","date","description","excerpt","render","postList","post","className","itemScope","itemType","Link","to","key","itemProp","dangerouslySetInnerHTML","__html","Component","data","location","tag","pageContext","posts","allMarkdownRemark","nodes","siteTitle","site","siteMetadata"],"sourceRoot":""}