{"version":3,"file":"component---src-pages-index-js-8d1267f49d2b51b0f193.js","mappings":"6JAiDA,IA7CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAPN,uBASCX,MAAAA,OAAA,EAAAA,EAAQY,OACP,uCACa,8BAASZ,EAAOY,MAD7B,KAC6CZ,MAAAA,OAAA,EAAAA,EAAQa,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBX,MAAAA,OAAA,EAAAA,EAAQY,UAAR,KAAhC,yC,iICrCWC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAkDlB,OAlDkBA,EACnBC,YAAA,WAWE,OAVsBC,KAAKC,MAAnBC,UAELC,KAAI,SAAAC,GACH,MAAO,CACLC,KAAMD,EAASE,OAAOC,KACtBC,MAAOJ,EAASK,YAAYD,MAC5BE,KAAMN,EAASK,YAAYC,KAC3BC,YAAaP,EAASK,YAAYE,aAAeP,EAASQ,aAIjE,EAEDC,OAAA,WACE,IAAMC,EAAWd,KAAKD,cAEtB,OACE,+BACGe,EAASX,KAAI,SAAAY,GACZ,OACE,2BACE7B,UAAU,iBACV8B,WAAS,EACTC,SAAS,6BAET,8BACE,2BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAKV,KAAMe,IAAKL,EAAKP,MAAOa,SAAS,OAC7C,wBAAMA,SAAS,YAAYN,EAAKP,SAGpC,6BAAQO,EAAKL,QAGjB,2BACE,qBACEY,wBAAyB,CACvBC,OAAQR,EAAKJ,aAEfU,SAAS,uBAQxB,EAlDkBvB,CAAoB0B,EAAAA,WCgCzC,EA3BkB,SAAC,GAAwB,IAAD,EAArB5C,EAAqB,EAArBA,KAAM6C,EAAe,EAAfA,SACnBC,GAAY,UAAA9C,EAAKG,KAAKC,oBAAV,eAAwBwB,QAAxB,QACZmB,EAAQ/C,EAAKgD,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQL,SAAUA,EAAUjB,MAAOkB,GACjC,gBAAC,IAAD,CAAKlB,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQiB,SAAUA,EAAUjB,MAAOkB,GACjC,gBAAC,IAAD,CAAKlB,MAAM,cACX,gBAAC,IAAD,MACA,gBAACV,EAAD,CAAaI,UAAWyB,O","sources":["webpack://heriswn.github.io/./src/components/bio.js","webpack://heriswn.github.io/./src/components/postList.js","webpack://heriswn.github.io/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        src=\"../assets/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .map(postEdge => {\n        return {\n          path: postEdge.fields.slug,\n          title: postEdge.frontmatter.title,\n          date: postEdge.frontmatter.date,\n          description: postEdge.frontmatter.description || postEdge.excerpt,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n\n    return (\n      <section>\n        {postList.map(post => {\n          return (\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <div>\n                  <h2>\n                    <Link to={post.path} key={post.title} itemProp=\"url\">\n                      <span itemProp=\"headline\">{post.title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.date}</small>\n                </div>\n              </header>\n              <div>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.description,\n                  }}\n                  itemProp=\"description\"\n                />\n              </div>\n            </article>\n          )\n        })}\n      </section>\n    )\n  }\n}","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostListing from \"../components/postList\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <PostListing postEdges={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          template\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","src","width","height","quality","alt","name","summary","href","twitter","PostListing","getPostList","this","props","postEdges","map","postEdge","path","fields","slug","title","frontmatter","date","description","excerpt","render","postList","post","itemScope","itemType","Link","to","key","itemProp","dangerouslySetInnerHTML","__html","Component","location","siteTitle","posts","allMarkdownRemark","nodes","length"],"sourceRoot":""}