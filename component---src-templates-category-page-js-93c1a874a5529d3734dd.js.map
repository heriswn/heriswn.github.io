{"version":3,"file":"component---src-templates-category-page-js-93c1a874a5529d3734dd.js","mappings":"4LAGqBA,EAAW,6FA2D7B,OA3D6B,EAC9BC,YAAA,WAaE,OAZsBC,KAAKC,MAAnBC,UAELC,KAAI,SAAAC,GACH,MAAO,CACLC,SAAUD,EAASE,GACnBC,KAAMH,EAASI,OAAOC,KACtBC,MAAON,EAASO,YAAYD,MAC5BE,KAAMR,EAASS,WACfC,KAAMV,EAASO,YAAYG,KAC3BC,YAAaX,EAASO,YAAYI,aAAeX,EAASY,QAE9D,GAEJ,EAAC,EAEDC,OAAA,WACE,IAAMC,EAAWlB,KAAKD,cAEtB,OACE,2BACGmB,EAASf,KAAI,SAAAgB,GACZ,OACE,2BACEC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,2BACE,0BACE,gBAAC,EAAAC,KAAI,CACHC,GAAIL,EAAKZ,KACTkB,IAAKN,EAAKd,SACVqB,SAAS,MACTN,UAAU,iBAEV,wBAAMM,SAAS,YAAYP,EAAKT,SAGpC,yBACE,6BAAQS,EAAKL,MAAa,MAAG,6BAAQK,EAAKP,KAAI,gBAIpD,2BACE,qBACEe,wBAAyB,CACvBC,OAAQT,EAAKJ,aAEfW,SAAS,iBAKnB,IAGN,EAAC,EA3D6B,CAASG,EAAAA,U,wECkBzC,UAf6B,SAAH,GAAyC,IAAD,EAAlCC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YACxCC,GAAQH,aAAI,EAAJA,EAAMI,kBAAkBC,QAAS,GACzCC,GAAkC,QAAtB,EAAAN,EAAKO,KAAKC,oBAAY,aAAtB,EAAwB5B,QAAK,QAE/C,OACE,gBAAC,IAAM,CAACqB,SAAUA,EAAUrB,MAAO0B,GACjC,gBAAC,IAAG,CAACL,SAAUA,EAAUrB,MAAOsB,aAAW,EAAXA,EAAaO,WAC7C,0BACE,wBAAMnB,UAAU,gBAAgBY,aAAW,EAAXA,EAAaO,WAE/C,gBAAC,IAAW,CAACrC,UAAW+B,IAG9B,C","sources":["webpack://heriswn.github.io/./src/components/postList.js","webpack://heriswn.github.io/./src/templates/category-page.js"],"sourcesContent":["import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default class PostListing extends Component {\r\n  getPostList() {\r\n    const { postEdges } = this.props\r\n    const postList = postEdges\r\n      .map(postEdge => {\r\n        return {\r\n          idUnique: postEdge.id,\r\n          path: postEdge.fields.slug,\r\n          title: postEdge.frontmatter.title,\r\n          read: postEdge.timeToRead,\r\n          date: postEdge.frontmatter.date,\r\n          description: postEdge.frontmatter.description || postEdge.excerpt,\r\n        }\r\n      })\r\n    return postList\r\n  }\r\n\r\n  render() {\r\n    const postList = this.getPostList()\r\n\r\n    return (\r\n      <div>\r\n        {postList.map(post => {\r\n          return (\r\n            <article\r\n              className=\"post-list-item\"\r\n              itemScope\r\n              itemType=\"http://schema.org/Article\"\r\n            >\r\n              <header>\r\n                <div>\r\n                  <h2>\r\n                    <Link\r\n                      to={post.path}\r\n                      key={post.idUnique}\r\n                      itemProp=\"url\"\r\n                      className=\"postList-link\"\r\n                    >\r\n                      <span itemProp=\"headline\">{post.title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <p>\r\n                    <small>{post.date}</small> â€¢ <small>{post.read} min read</small>\r\n                  </p>\r\n                </div>\r\n              </header>\r\n              <div>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: post.description,\r\n                  }}\r\n                  itemProp=\"description\"\r\n                />\r\n              </div>\r\n            </article>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport PostListing from \"../components/postList\"\r\n\r\nconst CategoryPageTemplate = ({ data, location, pageContext }) => {\r\n  const posts = data?.allMarkdownRemark.nodes || []\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo location={location} title={pageContext?.category} />\r\n      <h1>\r\n        <span className=\"category-tag\">{pageContext?.category}</span>\r\n      </h1>\r\n      <PostListing postEdges={posts} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CategoryPageTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPageByType($category: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { categories: { eq: $category } } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["PostListing","getPostList","this","props","postEdges","map","postEdge","idUnique","id","path","fields","slug","title","frontmatter","read","timeToRead","date","description","excerpt","render","postList","post","className","itemScope","itemType","Link","to","key","itemProp","dangerouslySetInnerHTML","__html","Component","data","location","pageContext","posts","allMarkdownRemark","nodes","siteTitle","site","siteMetadata","category"],"sourceRoot":""}