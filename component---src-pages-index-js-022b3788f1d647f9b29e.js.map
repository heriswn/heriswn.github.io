{"version":3,"file":"component---src-pages-index-js-022b3788f1d647f9b29e.js","mappings":"6JAwDA,IApDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,uBAEtBX,aAAM,EAANA,EAAQY,OACP,sCACa,IACX,qBACEC,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAEJ,8BAASf,EAAOY,OACb,KACJZ,aAAM,EAANA,EAAQgB,UAAW,KAAI,qCAGxB,qBAAGH,KAAI,yBAAyBV,aAAM,EAANA,EAAQc,UAAO,KAAS,YAKlE,C,wFCnDqBC,EAAW,6FA0D7B,OA1D6B,EAC9BC,YAAA,WAYE,OAXsBC,KAAKC,MAAnBC,UAELC,KAAI,SAAAC,GACH,MAAO,CACLC,SAAUD,EAASE,GACnBC,KAAMH,EAASI,OAAOC,KACtBC,MAAON,EAASO,YAAYD,MAC5BE,KAAMR,EAASO,YAAYC,KAC3BC,YAAaT,EAASO,YAAYE,aAAeT,EAASU,QAE9D,GAEJ,EAAC,EAEDC,OAAA,WACE,IAAMC,EAAWhB,KAAKD,cAEtB,OACE,2BACGiB,EAASb,KAAI,SAAAc,GACZ,OACE,2BACEjC,UAAU,iBACVkC,WAAS,EACTC,SAAS,6BAET,8BACE,2BACE,0BACE,gBAAC,EAAAC,KAAI,CACHC,GAAIJ,EAAKV,KACTe,IAAKL,EAAKZ,SACVkB,SAAS,MACTvC,UAAU,iBAEV,wBAAMuC,SAAS,YAAYN,EAAKP,SAGpC,yBACE,6BAAQO,EAAKL,SAInB,2BACE,qBACEY,wBAAyB,CACvBC,OAAQR,EAAKJ,aAEfU,SAAS,iBAKnB,IAGN,EAAC,EA1D6B,CAASG,EAAAA,U,kFCgCzC,UA3BkB,SAAH,GAA4B,IAAD,EAArBhD,EAAI,EAAJA,KAAMiD,EAAQ,EAARA,SACnBC,GAAkC,QAAtB,EAAAlD,EAAKG,KAAKC,oBAAY,aAAtB,EAAwB4B,QAAK,QACzCmB,EAAQnD,EAAKoD,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACL,SAAUA,EAAUjB,MAAOkB,GACjC,gBAAC,IAAG,CAAClB,MAAM,cACX,gBAAC,IAAG,MACJ,uLAUJ,gBAAC,IAAM,CAACiB,SAAUA,EAAUjB,MAAOkB,GACjC,gBAAC,IAAG,CAAClB,MAAM,cACX,gBAAC,IAAG,MACJ,gBAAC,IAAW,CAACR,UAAW2B,IAG9B,C","sources":["webpack://heriswn.github.io/./src/components/bio.js","webpack://heriswn.github.io/./src/components/postList.js","webpack://heriswn.github.io/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        src=\"../assets/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by{\" \"}\r\n          <a\r\n            href=\"https://herisetiawan.vercel.app\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <strong>{author.name}</strong>\r\n          </a>{\" \"}\r\n          {author?.summary || null}\r\n          {` `}\r\n          You should follow them on {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>Twitter</a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React, { Component } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default class PostListing extends Component {\r\n  getPostList() {\r\n    const { postEdges } = this.props\r\n    const postList = postEdges\r\n      .map(postEdge => {\r\n        return {\r\n          idUnique: postEdge.id,\r\n          path: postEdge.fields.slug,\r\n          title: postEdge.frontmatter.title,\r\n          date: postEdge.frontmatter.date,\r\n          description: postEdge.frontmatter.description || postEdge.excerpt,\r\n        }\r\n      })\r\n    return postList\r\n  }\r\n\r\n  render() {\r\n    const postList = this.getPostList()\r\n\r\n    return (\r\n      <div>\r\n        {postList.map(post => {\r\n          return (\r\n            <article\r\n              className=\"post-list-item\"\r\n              itemScope\r\n              itemType=\"http://schema.org/Article\"\r\n            >\r\n              <header>\r\n                <div>\r\n                  <h2>\r\n                    <Link\r\n                      to={post.path}\r\n                      key={post.idUnique}\r\n                      itemProp=\"url\"\r\n                      className=\"postList-link\"\r\n                    >\r\n                      <span itemProp=\"headline\">{post.title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <p>\r\n                    <small>{post.date}</small>\r\n                  </p>\r\n                </div>\r\n              </header>\r\n              <div>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: post.description,\r\n                  }}\r\n                  itemProp=\"description\"\r\n                />\r\n              </div>\r\n            </article>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport PostListing from \"../components/postList\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <Bio />\r\n      <PostListing postEdges={posts} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          template\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","src","width","height","quality","alt","name","href","target","rel","summary","twitter","PostListing","getPostList","this","props","postEdges","map","postEdge","idUnique","id","path","fields","slug","title","frontmatter","date","description","excerpt","render","postList","post","itemScope","itemType","Link","to","key","itemProp","dangerouslySetInnerHTML","__html","Component","location","siteTitle","posts","allMarkdownRemark","nodes","length"],"sourceRoot":""}