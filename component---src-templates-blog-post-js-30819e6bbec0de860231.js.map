{"version":3,"file":"component---src-templates-blog-post-js-30819e6bbec0de860231.js","mappings":"6JAiDA,IA7CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,uBAEtBX,aAAM,EAANA,EAAQY,OACP,uCACa,8BAASZ,EAAOY,MAAc,KAAEZ,aAAM,EAANA,EAAQa,UAAW,KAAI,IAElE,qBAAGC,KAAI,yBAAyBX,aAAM,EAANA,EAAQY,UAAO,KAAS,sCAOlE,C,kIC/CO,SAASC,EAAQC,GACtB,OACEA,GACAA,EACGC,MACC,sEAEDC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,aAAa,IACxBC,KAAK,IAEZ,CCAA,IA0FA,EA1FyB,SAAH,GAA4B,IAAD,EAArBxB,EAAI,EAAJA,KAAMyB,EAAQ,EAARA,SAC1BC,EAAO1B,EAAK2B,eACZC,GAAkC,QAAtB,EAAA5B,EAAKG,KAAKC,oBAAY,aAAtB,EAAwByB,QAAK,QACvCC,EAAmB9B,EAAnB8B,SAAUC,EAAS/B,EAAT+B,KAElB,OACE,gBAAC,IAAM,CAACN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAG,CACFI,MACEhC,EAAKG,KAAKC,aAAa6B,QAAUP,EAAKQ,YAAYC,UAAUC,UAE9DP,MAAOH,EAAKQ,YAAYL,MACxBQ,YAAaX,EAAKQ,YAAYG,aAAeX,EAAKY,UAEpD,2BACEhC,UAAU,YACViC,WAAS,EACTC,SAAS,6BAET,8BAEE,sBAAIC,SAAS,YAAYf,EAAKQ,YAAYL,OAC1C,yBAAIH,EAAKQ,YAAYG,aAAeX,EAAKY,SACzC,uBAAKhC,UAAU,QACb,4BACGoB,EAAKQ,YAAYhC,OAAM,KAAIwB,EAAKQ,YAAYQ,KAAI,MAEnD,wBAAMpC,UAAU,YACboB,EAAKQ,YAAYS,WAAWtB,KAAI,SAACuB,EAAKC,GAAK,OAC1C,gBAAC,EAAAC,KAAI,CAACC,IAAKF,EAAOG,GAAE,aAAe9B,EAAQ0B,IACxCA,EACI,MAIb,2BACE,gBAAC,EAAAK,EAAW,CACVjB,MAAON,EAAKQ,YAAYC,UAAUe,gBAAgBC,gBAClD7C,UAAU,aACVO,IAAG,GAAKa,EAAKQ,YAAYL,SAG7B,4BAAOH,EAAKQ,YAAYkB,SAE1B,2BACEC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,MACxCd,SAAS,gBAEX,uBAAKnC,UAAU,OACZoB,EAAKQ,YAAYsB,KAAKnC,KAAI,SAACoC,EAAUZ,GAAK,OACzC,sBAAIE,IAAKF,GACP,gBAAC,EAAAC,KAAI,CAACE,GAAE,QAAU9B,EAAQuC,IAAY,IAAGA,GACtC,KAGT,2BACA,8BACE,gBAAC,IAAG,QAGR,uBAAKnD,UAAU,iBACb,sBACEoD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjC,GACC,gBAAC,EAAAgB,KAAI,CAACE,GAAIlB,EAASkC,OAAOC,KAAMC,IAAI,QACjCpC,EAASI,YAAYL,QAI5B,0BACGE,GACC,gBAAC,EAAAe,KAAI,CAACE,GAAIjB,EAAKiC,OAAOC,KAAMC,IAAI,QAC7BnC,EAAKG,YAAYL,UAQlC,C","sources":["webpack://heriswn.github.io/./src/components/bio.js","webpack://heriswn.github.io/./src/utils/helper.js","webpack://heriswn.github.io/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        src=\"../assets/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong> {author?.summary || null}\r\n          {` `}\r\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\r\n            You should follow them on Twitter\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","export function slugify(string) {\r\n  return (\r\n    string &&\r\n    string\r\n      .match(\r\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\r\n      )\r\n      .map(x => x.toLowerCase())\r\n      .join(\"-\")\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n\r\n// import ToC from \"../components/toc\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { slugify } from \"../utils/helper\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        image={\r\n          data.site.siteMetadata.siteUrl + post.frontmatter.thumbnail.publicURL\r\n        }\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          {/* <ToC headings={post.headings} /> */}\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.description || post.excerpt}</p>\r\n          <div className=\"meta\">\r\n            <span>\r\n              {post.frontmatter.author}, {post.frontmatter.date} â€¢\r\n            </span>\r\n            <span className=\"category\">\r\n              {post.frontmatter.categories.map((cat, index) => (\r\n                <Link key={index} to={`/category/${slugify(cat)}`}>\r\n                  {cat}\r\n                </Link>\r\n              ))}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <GatsbyImage\r\n              image={post.frontmatter.thumbnail.childImageSharp.gatsbyImageData}\r\n              className=\"post-image\"\r\n              alt={`${post.frontmatter.title}`}\r\n            />\r\n          </div>\r\n          <span>{post.frontmatter.credit}</span>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <div className=\"tag\">\r\n          {post.frontmatter.tags.map((tagIndex, index) => (\r\n            <li key={index}>\r\n              <Link to={`/tag/${slugify(tagIndex)}`}>#{tagIndex}</Link>\r\n            </li>\r\n          ))}\r\n        </div>\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n        image\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 50)\r\n      html\r\n      headings {\r\n        value\r\n        depth\r\n      }\r\n      frontmatter {\r\n        title\r\n        author\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        categories\r\n        tags\r\n        credit\r\n        thumbnail {\r\n          publicURL\r\n          childImageSharp {\r\n            gatsbyImageData(width: 700, placeholder: BLURRED)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","src","width","height","quality","alt","name","summary","href","twitter","slugify","string","match","map","x","toLowerCase","join","location","post","markdownRemark","siteTitle","title","previous","next","image","siteUrl","frontmatter","thumbnail","publicURL","description","excerpt","itemScope","itemType","itemProp","date","categories","cat","index","Link","key","to","G","childImageSharp","gatsbyImageData","credit","dangerouslySetInnerHTML","__html","html","tags","tagIndex","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}