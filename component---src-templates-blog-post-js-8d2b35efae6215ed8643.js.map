{"version":3,"file":"component---src-templates-blog-post-js-8d2b35efae6215ed8643.js","mappings":"6JAkDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,yC,mGCzCH,SAASC,EAAQC,GACtB,OACEA,GACAA,EACGC,MACC,sEAEDC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,iBACXC,KAAK,KCHZ,IAwBA,EAxBqB,WACnB,IAUMC,GAVOzB,EAAAA,EAAAA,gBAAe,cAUJ0B,eAAeC,YAAYF,WAEnD,OACE,yBACGA,EAAWJ,KAAI,SAACO,EAAKC,GAAN,OACd,gBAAC,EAAAC,KAAD,CAAMC,IAAKF,EAAOG,GAAE,aAAed,EAAQU,IACxCA,Q,6BCOX,EAxBgB,WACd,IAUMK,GAVOjC,EAAAA,EAAAA,gBAAe,cAUV0B,eAAeC,YAAYM,KAE7C,OACE,2BACGA,EAAKZ,KAAI,SAACa,EAAKL,GAAN,OACR,gBAAC,EAAAC,KAAD,CAAMC,IAAKF,EAAOG,GAAE,QAAUd,EAAQgB,IACnCA,QC6DX,EAzEyB,SAAC,GAAwB,IAAD,EAArBnC,EAAqB,EAArBA,KAAMoC,EAAe,EAAfA,SAC1BC,EAAOrC,EAAK2B,eACZW,GAAY,UAAAtC,EAAKG,KAAKC,oBAAV,eAAwBmC,QAAxB,QACVC,EAAmBxC,EAAnBwC,SAAUC,EAASzC,EAATyC,KAElB,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CACEI,MACE1C,EAAKG,KAAKC,aAAauC,QAAUN,EAAKT,YAAYgB,UAAUC,UAE9DN,MAAOF,EAAKT,YAAYW,MACxBO,YAAaT,EAAKT,YAAYkB,aAAeT,EAAKU,UAEpD,2BACEzC,UAAU,YACV0C,WAAS,EACTC,SAAS,6BAET,8BACE,gBAAC,EAAD,MACA,sBAAIC,SAAS,YAAYb,EAAKT,YAAYW,OAC1C,yBAAIF,EAAKT,YAAYkB,aAAeT,EAAKU,SACzC,yBAAIV,EAAKT,YAAYuB,MACrB,2BACE,gBAAC,EAAAC,EAAD,CACEV,MAAOL,EAAKT,YAAYgB,UAAUS,gBAAgBC,gBAClDhD,UAAU,aACVQ,IAAKuB,EAAKT,YAAYW,SAG1B,6BAAQF,EAAKT,YAAY2B,SAE3B,2BACEC,wBAAyB,CAAEC,OAAQpB,EAAKqB,MACxCR,SAAS,gBAEX,gBAAC,EAAD,MACA,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK5C,UAAU,iBACb,sBACEqD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGxB,GACC,gBAAC,EAAAT,KAAD,CAAME,GAAIO,EAASyB,OAAOC,KAAMC,IAAI,QAApC,KACK3B,EAASZ,YAAYW,QAI9B,0BACGE,GACC,gBAAC,EAAAV,KAAD,CAAME,GAAIQ,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKb,YAAYW,MADpB,Y","sources":["webpack://heriswn.github.io/./src/components/bio.js","webpack://heriswn.github.io/./src/utils/helper.js","webpack://heriswn.github.io/./src/components/category-list.js","webpack://heriswn.github.io/./src/components/tag-list.js","webpack://heriswn.github.io/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../assets/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","export function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map(x => x.toLowerCase())\n      .join(\"-\")\n  )\n}\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { slugify } from \"../utils/helper\"\n\nconst CategoryList = () => {\n  const data = useStaticQuery(graphql`\n    query CategoryListQuery {\n      markdownRemark {\n        frontmatter {\n          categories\n        }\n      }\n    }\n  `)\n\n  const categories = data.markdownRemark.frontmatter.categories\n\n  return (\n    <p>\n      {categories.map((cat, index) => (\n        <Link key={index} to={`/category/${slugify(cat)}`}>\n          {cat}\n        </Link>\n      ))}\n    </p>\n  )\n}\n\nexport default CategoryList\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { slugify } from \"../utils/helper\"\n\nconst TagList = () => {\n  const data = useStaticQuery(graphql`\n    query TagListQuery {\n      markdownRemark {\n        frontmatter {\n          tags\n        }\n      }\n    }\n  `)\n\n  const tags = data.markdownRemark.frontmatter.tags\n\n  return (\n    <div>\n      {tags.map((tag, index) => (\n        <Link key={index} to={`/tag/${slugify(tag)}`}>\n          {tag}\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default TagList\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport CategoryList from \"../components/category-list\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TagList from \"../components/tag-list\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        image={\n          data.site.siteMetadata.siteUrl + post.frontmatter.thumbnail.publicURL\n        }\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <CategoryList />\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.description || post.excerpt}</p>\n          <p>{post.frontmatter.date}</p>\n          <div>\n            <GatsbyImage\n              image={post.frontmatter.thumbnail.childImageSharp.gatsbyImageData}\n              className=\"post-image\"\n              alt={post.frontmatter.title}\n            />\n          </div>\n          <small>{post.frontmatter.credit}</small>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <TagList/>\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        image\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n        tags\n        credit\n        thumbnail {\n          publicURL\n          childImageSharp {\n            gatsbyImageData(\n              width: 700\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","slugify","string","match","map","x","toLowerCase","join","categories","markdownRemark","frontmatter","cat","index","Link","key","to","tags","tag","location","post","siteTitle","title","previous","next","image","siteUrl","thumbnail","publicURL","description","excerpt","itemScope","itemType","itemProp","date","G","childImageSharp","gatsbyImageData","credit","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}